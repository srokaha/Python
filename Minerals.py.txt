# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2024-12-11 15:05:07
"""
import arcpy  

def Model():  # Model

    # To allow overwriting outputs change overwriteOutput option to True.
    #the output file already exist , they will not be overwritten. 
    arcpy.env.overwriteOutput = False
# import a toolbox containing various geoprocesing tools 
    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")
    Mineral_Core_Location_csv = "Mineral_Core_Location_2672705157807298235 (1).csv" # containing minerals core location data. 
    Health_Status_Area_HSA_ = "ModelBuilder\\Health_Status_Area_(HSA)" # represents a models or features class that defines health  status data. 

#Imported csv file of Mineral_Core_Location_2672705157807298235 of Alberta and converted to point.
# contating the longitute and latitude data into a point features class. 
    # Process: XY Table To Point (XY Table To Point) (management)
    Minerals_Core_Location = "C:\\Users\\User\\Documents\\ArcGIS\\Projects\\geo115final\\geo115final.gdb\\Mineral_Core_Location_26727051578072982351_XYTableToPoint"
    arcpy.management.XYTableToPoint(in_table=Mineral_Core_Location_csv, out_feature_class=Minerals_Core_Location, x_field="Longitude (NAD83)", y_field="Latitude (NAD83)", coordinate_system="GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]];-400 -400 1000000000;-100000 10000;-100000 10000;8.98315284119521E-09;0.001;0.001;IsHighPrecision")

#Selected Gold, Diamonds core site.
# select function filters the point features class tp include only those 'colehole' equals to 'gold_diamonds' another features class. 
    # Process: Select(Gold,Diamonds) (Select) (analysis)
    Minerals_Select = "C:\\Users\\User\\Documents\\ArcGIS\\Projects\\geo115final\\geo115final.gdb\\MineralsCoreLocation_Select"
    arcpy.analysis.Select(in_features=Minerals_Core_Location, out_feature_class=Minerals_Select, where_clause="Corehole_Purpose = 'Gold, Diamonds'")

#Clipped the selected features.
# to clip the selected minerals core locations to the boundaries defined by the points that fall within the health status area. 
    # Process: Clip (Clip) (analysis)
    Minerals_Clip = "C:\\Users\\User\\Documents\\ArcGIS\\Projects\\geo115final\\geo115final.gdb\\MineralsCoreLocation_Se_Clip"
    arcpy.analysis.Clip(in_features=Minerals_Select, clip_features=Health_Status_Area_HSA_, out_feature_class=Minerals_Clip)

#Buffered the clipped features.
    # Process: Buffer(50Km) (Buffer) (analysis)
    MineralsClip_Buffer = "C:\\Users\\User\\Documents\\ArcGIS\\Projects\\geo115final\\geo115final.gdb\\MineralsClip_Buffer"
    arcpy.analysis.Buffer(in_features=Minerals_Clip, out_feature_class=MineralsClip_Buffer, buffer_distance_or_field="50 Kilometers", dissolve_option="ALL")

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="C:\\Users\\User\\Documents\\ArcGIS\\Projects\\geo115final\\geo115final.gdb", workspace="C:\\Users\\User\\Documents\\ArcGIS\\Projects\\geo115final\\geo115final.gdb"):
        Model()
